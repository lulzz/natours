{"id":"login.js","dependencies":[{"name":"E:\\2_BACKEND\\NODEJS\\PROJECTS\\natours\\package.json","includedInParent":true,"mtime":1575481576839},{"name":"axios","loc":{"line":2,"column":18},"parent":"E:\\2_BACKEND\\NODEJS\\PROJECTS\\natours\\public\\js\\login.js","resolved":"E:\\2_BACKEND\\NODEJS\\PROJECTS\\natours\\node_modules\\axios\\index.js"},{"name":"./alerts","loc":{"line":4,"column":26},"parent":"E:\\2_BACKEND\\NODEJS\\PROJECTS\\natours\\public\\js\\login.js","resolved":"E:\\2_BACKEND\\NODEJS\\PROJECTS\\natours\\public\\js\\alerts.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logout = exports.login = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _alerts = require(\"./alerts\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*eslint-disable*/\nvar login = function login(email, password) {\n  var res;\n  return regeneratorRuntime.async(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return regeneratorRuntime.awrap((0, _axios.default)({\n            method: 'POST',\n            url: 'http://127.0.0.1:3000/api/v1/users/login',\n            data: {\n              email: email,\n              password: password\n            }\n          }));\n\n        case 3:\n          res = _context.sent;\n\n          if (res.data.status === 'success') {\n            (0, _alerts.showAlert)('success', 'Logged in successfully!');\n            window.setTimeout(function () {\n              return location.assign('/');\n            }, 1500);\n          }\n\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          (0, _alerts.showAlert)('error', _context.t0.response.data.message);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]]);\n};\n\nexports.login = login;\n\nvar logout = function logout() {\n  var res;\n  return regeneratorRuntime.async(function logout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return regeneratorRuntime.awrap((0, _axios.default)({\n            method: 'GET',\n            url: 'http://127.0.0.1:3000/api/v1/users/logout'\n          }));\n\n        case 3:\n          res = _context2.sent;\n          if (res.data.status === 'success') location.reload(true);\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          (0, _alerts.showAlert)('error', 'Error logging out! Try again.');\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]]);\n};\n\nexports.logout = logout;"},"sourceMaps":null,"error":null,"hash":"389981f752ee169d5e2c74952e066652","cacheData":{"env":{}}}